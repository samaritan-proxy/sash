// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/samaritan-proxy/samaritan-api/go/api (interfaces: DiscoveryService_StreamSvcEndpointsServer)

// Package discovery is a generated GoMock package.
package discovery

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	api "github.com/samaritan-proxy/samaritan-api/go/api"
	metadata "google.golang.org/grpc/metadata"
	reflect "reflect"
)

// MockDiscoveryService_StreamSvcEndpointsServer is a mock of DiscoveryService_StreamSvcEndpointsServer interface
type MockDiscoveryService_StreamSvcEndpointsServer struct {
	ctrl     *gomock.Controller
	recorder *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder
}

// MockDiscoveryService_StreamSvcEndpointsServerMockRecorder is the mock recorder for MockDiscoveryService_StreamSvcEndpointsServer
type MockDiscoveryService_StreamSvcEndpointsServerMockRecorder struct {
	mock *MockDiscoveryService_StreamSvcEndpointsServer
}

// NewMockDiscoveryService_StreamSvcEndpointsServer creates a new mock instance
func NewMockDiscoveryService_StreamSvcEndpointsServer(ctrl *gomock.Controller) *MockDiscoveryService_StreamSvcEndpointsServer {
	mock := &MockDiscoveryService_StreamSvcEndpointsServer{ctrl: ctrl}
	mock.recorder = &MockDiscoveryService_StreamSvcEndpointsServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDiscoveryService_StreamSvcEndpointsServer) EXPECT() *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder {
	return m.recorder
}

// Context mocks base method
func (m *MockDiscoveryService_StreamSvcEndpointsServer) Context() context.Context {
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context
func (mr *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder) Context() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockDiscoveryService_StreamSvcEndpointsServer)(nil).Context))
}

// Recv mocks base method
func (m *MockDiscoveryService_StreamSvcEndpointsServer) Recv() (*api.SvcEndpointDiscoveryRequest, error) {
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*api.SvcEndpointDiscoveryRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv
func (mr *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder) Recv() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockDiscoveryService_StreamSvcEndpointsServer)(nil).Recv))
}

// RecvMsg mocks base method
func (m *MockDiscoveryService_StreamSvcEndpointsServer) RecvMsg(arg0 interface{}) error {
	ret := m.ctrl.Call(m, "RecvMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg
func (mr *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockDiscoveryService_StreamSvcEndpointsServer)(nil).RecvMsg), arg0)
}

// Send mocks base method
func (m *MockDiscoveryService_StreamSvcEndpointsServer) Send(arg0 *api.SvcEndpointDiscoveryResponse) error {
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send
func (mr *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockDiscoveryService_StreamSvcEndpointsServer)(nil).Send), arg0)
}

// SendHeader mocks base method
func (m *MockDiscoveryService_StreamSvcEndpointsServer) SendHeader(arg0 metadata.MD) error {
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader
func (mr *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockDiscoveryService_StreamSvcEndpointsServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method
func (m *MockDiscoveryService_StreamSvcEndpointsServer) SendMsg(arg0 interface{}) error {
	ret := m.ctrl.Call(m, "SendMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg
func (mr *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockDiscoveryService_StreamSvcEndpointsServer)(nil).SendMsg), arg0)
}

// SetHeader mocks base method
func (m *MockDiscoveryService_StreamSvcEndpointsServer) SetHeader(arg0 metadata.MD) error {
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader
func (mr *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockDiscoveryService_StreamSvcEndpointsServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method
func (m *MockDiscoveryService_StreamSvcEndpointsServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer
func (mr *MockDiscoveryService_StreamSvcEndpointsServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockDiscoveryService_StreamSvcEndpointsServer)(nil).SetTrailer), arg0)
}
